// <auto-generated />
using System;
using AxianTast.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AxianTast.Core.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AxianTast.Core.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("UpdateRequest")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AxianTast.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DOB")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DepId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeavPeryear")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Salary")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SickLeave")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DepId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AxianTast.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId")
                        .IsUnique()
                        .HasFilter("[EmpId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AxianTast.Core.Entities.Employee", b =>
                {
                    b.HasOne("AxianTast.Core.Entities.Department", "department")
                        .WithMany("Employees")
                        .HasForeignKey("DepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("AxianTast.Core.Entities.User", b =>
                {
                    b.HasOne("AxianTast.Core.Entities.Employee", "Employee")
                        .WithOne("User")
                        .HasForeignKey("AxianTast.Core.Entities.User", "EmpId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AxianTast.Core.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("AxianTast.Core.Entities.Employee", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
